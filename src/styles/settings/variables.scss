/*================ Color Variables ================*/
// $color-primary: {{ settings.color_primary }};
// Pink
$color-primary: #FF0066;
// Light Pink
$color-primary-10: lighten(desaturate($color-primary, 33%), 44%);
// Clay Blue
$color-secondary: adjust-hue(desaturate(darken($color-primary, 0%), 55%), -140deg);
// Light Clay
$color-primary-10: lighten(desaturate($color-secondary, 11%), 44%);
// Yellow
$color-tertiary: adjust-hue($color-primary, 66deg);
// Purple / Violet
$color-tertiary-2: adjust-hue(desaturate(lighten($color-primary, 18%), 60%), -69deg);
$color-teal: #29BEA4;
$color-twilight: #5E25FB;

$color-transparent: rbga(0,0,0,0);

// #FF0066 pink
// #29BEA4 teal
// #5E25FB twilight
// #69A8C0 clay blue

$color-black: #000;
$color-dark: #111;
$color-white: #fff;

// Text colors
$color-body-text: {{ settings.color_body_text }};

// Backgrounds
$color-body: $color-white;

// Border colors
$color-border: $color-primary;

// Helper colors for form error states
$color-disabled: $color-black;
$color-disabled-border: $color-black;
$color-error: $color-black;
$color-error-bg: $color-black;
$color-success: $color-black;
$color-success-bg: $color-black;

/*================ Typography Variables ================*/
$font-weight-normal: 400;
$font-weight-bold: 700;

$font-stack-header: 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-weight-header: $font-weight-bold;

$font-stack-body: 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-size-base: {{ settings.type_base_size }};

/*============================================================================
  Grid Breakpoints and Class Names
    - Do not change the variable names
==============================================================================*/
$grid-medium: 750px;
$grid-large: 990px;
$grid-widescreen: 1400px;
$grid-gutter: 30px;

$small: 'small';
$medium: 'medium';
$medium-down: 'medium-down';
$medium-up: 'medium-up';
$large: 'large';
$large-down: 'large-down';
$large-up: 'large-up';
$widescreen: 'widescreen';

// The `$breakpoints` list is used to build our media queries.
// You can use these in the media-query mixin.
$breakpoints: (
  $small '(max-width: #{$grid-medium - 1})',
  $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',
  $medium-down '(max-width: #{$grid-large - 1})',
  $medium-up '(min-width: #{$grid-medium})',
  $large '(min-width: #{$grid-large}) and (max-width: #{$grid-widescreen - 1})',
  $large-down '(max-width: #{$grid-widescreen - 1})',
  $large-up '(min-width: #{$grid-large})',
  $widescreen '(min-width: #{$grid-widescreen})'
);

/*============================================================================
  Generate breakpoint-specific column widths and push classes
    - Default column widths: $breakpoint-has-widths: ($small, $medium-up);
    - Default is no push classes
    - Will not work if `styles/global/grid.scss` is removed
==============================================================================*/
$breakpoint-has-widths: ($small, $medium-up);
$breakpoint-has-push: ();

/*================ Sizing Variables ================*/
$width-site: 1180px;
$gutter: 30px;

/*================ Z-Index ================*/
$z-index-dropdown: 2;
$z-index-skip-to-content: 10000; // really high to be safe of app markup

/*================ SVG ================*/
$svg-select-icon: #{'{{ "ico-select.svg" | asset_url }}'};
